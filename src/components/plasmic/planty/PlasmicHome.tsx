// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qypGRFiT5EqbMS3JE3NhBQ
// Component: 23sgDbmvMZX6V
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: ehtTUDWjl5E4a/component
import Button from "../../Button"; // plasmic-import: Mhy7_SbnjlH5nB/component
import ProductCard from "../../ProductCard"; // plasmic-import: Wy4F2uM1mM72A2/component
import Ratings from "../../Ratings"; // plasmic-import: LRkC9OCLRYTXtV/component
import FeatureItem from "../../FeatureItem"; // plasmic-import: ZMyZ0SSZNWXsw4/component
import BlogPost from "../../BlogPost"; // plasmic-import: Fr41oLroF9RKnQ/component
import Footer from "../../Footer"; // plasmic-import: 3o_cRhYGL2jyH/component
import ProductRow from "../../ProductRow"; // plasmic-import: rw_Z0zjJpGE2PO/component

import { useScreenVariants as useScreenVariantsgOmXfJvEYn5Htg } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: GOmXfJvEYn5HTG/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_planty.module.css"; // plasmic-import: qypGRFiT5EqbMS3JE3NhBQ/projectcss
import sty from "./PlasmicHome.module.css"; // plasmic-import: 23sgDbmvMZX6V/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: q6kM88TJsr8ItY/icon
import ButtonArrowIcon from "./icons/PlasmicIcon__ButtonArrow"; // plasmic-import: ttvsNHGkd-Xnsz/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: dBeCsrFzIMFm1_/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: Yzi7tYpO3fZfz_/icon
import QuotessvgIcon from "./icons/PlasmicIcon__Quotessvg"; // plasmic-import: YZo6X-bMKsykO4/icon
import galinaNMiziNqvJx5MUnsplashjpgRy6JhmNyr3GQ2D from "./images/galinaNMiziNqvJx5MUnsplashjpg.jpeg"; // plasmic-import: ry6jhmNYR3gQ2d/picture
import igorSonFvPxCqgtwcUnsplashjpg4LiZhfTrxPcaR5 from "./images/igorSonFvPxCqgtwcUnsplashjpg.jpeg"; // plasmic-import: 4LiZhfTRXPcaR5/picture
import scottWebbORwRlTgBrPoUnsplashjpgISgh9OhSuSpLm from "./images/scottWebbORwRlTgBrPoUnsplashjpg.jpeg"; // plasmic-import: i_Sgh9ohSuSPLm/picture
import freddieMarriageUcfKyTanLuUnsplashjpgK86N8YgnQh5D from "./images/freddieMarriageUcfKyTanLuUnsplashjpg.jpeg"; // plasmic-import: k-86N8YgnQH5D-/picture
import f1YOJqCo6TU0Pn from "./images/f1.jpeg"; // plasmic-import: yO-JQCo6tU0-PN/picture
import f2I3Qd6A78HjFxH from "./images/f2.jpeg"; // plasmic-import: I3Qd6A7_8HjFxH/picture
import f3CcpC9XiKq2Il5 from "./images/f3.jpeg"; // plasmic-import: CcpC9xiKQ_2Il5/picture
import f49QN8ZaJq29O5 from "./images/f4.jpeg"; // plasmic-import: 9qN_8_zaJq29O5/picture
import b182T8PEt1H6XE from "./images/b1.jpeg"; // plasmic-import: 82T8pET1-H6xE-/picture
import b2JoTaPwQqaAXfhX from "./images/b2.jpeg"; // plasmic-import: JoTAPwQqaAXfhX/picture
import b3K3FwJJfwvcCie from "./images/b3.jpeg"; // plasmic-import: k3fw_JJfwvcCIE/picture
import adidasJUfqs4ASrbPyRx from "./images/adidas.png"; // plasmic-import: jUfqs4ASrbPyRX/picture
import hmHEYwZvvf0UhGQd from "./images/hm.png"; // plasmic-import: hEYwZvvf0uhGQd/picture
import kappaFzdK3Rt4HvsmOt from "./images/kappa.png"; // plasmic-import: fzdK3Rt4HvsmOt/picture
import lacosteR80GqbEmgzzFt4 from "./images/lacoste.png"; // plasmic-import: r80GqbEMGZZFt4/picture
import levisLm4DniJm7Mi8Sl from "./images/levis.png"; // plasmic-import: Lm4DniJM7MI8Sl/picture
import plant6JpgId1ZxIvNz7Ob7K from "./images/plant6Jpg.png"; // plasmic-import: ID1zxIvNZ7Ob7K/picture
import plant1JpgWg6RpzwhAc5W2 from "./images/plant1Jpg.png"; // plasmic-import: wg6RPZWHAc5W2-/picture
import plant7JpgDppxIt896Nloc from "./images/plant7Jpg.png"; // plasmic-import: DPPXIt8_96NLOC/picture
import plant5JpgFP3Q7N5QgI5GW from "./images/plant5Jpg.png"; // plasmic-import: fP3Q7n5-qgI5gW/picture
import plant41JpgIUfKcDmduCdWr from "./images/plant41Jpg.png"; // plasmic-import: IUfKcDmdu-cdWr/picture
import plant31JpgKwAdn91AqX8MsA from "./images/plant31Jpg.png"; // plasmic-import: KwAdn91aqX8MsA/picture
import plant9WebpVtLmMePqxjlqvw from "./images/plant9Webp.webp"; // plasmic-import: VTLmMePQXJLQVW/picture
import plant2WebpFt68HYeVfundz5 from "./images/plant2Webp.webp"; // plasmic-import: FT68hYEVfundz5/picture

export type PlasmicHome__VariantMembers = {};
export type PlasmicHome__VariantsArgs = {};
type VariantPropType = keyof PlasmicHome__VariantsArgs;
export const PlasmicHome__VariantProps = new Array<VariantPropType>();

export type PlasmicHome__ArgsType = {};
type ArgPropType = keyof PlasmicHome__ArgsType;
export const PlasmicHome__ArgProps = new Array<ArgPropType>();

export type PlasmicHome__OverridesType = {
  root?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  button?: p.Flex<typeof Button>;
  featureItem?: p.Flex<typeof FeatureItem>;
  bestSellers?: p.Flex<"div">;
  productRow?: p.Flex<typeof ProductRow>;
  bigPlants?: p.Flex<"div">;
  cactuses?: p.Flex<"div">;
  testimonials?: p.Flex<"div">;
};

export interface DefaultHomeProps {
  className?: string;
}

function PlasmicHome__RenderFunc(props: {
  variants: PlasmicHome__VariantsArgs;
  args: PlasmicHome__ArgsType;
  overrides: PlasmicHome__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsgOmXfJvEYn5Htg()
  });

  return (
    <React.Fragment>
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__eDvdq)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__vOnV)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__jgAuB)}>
                <Header
                  className={classNames("__wab_instance", sty.header__sxmyJ)}
                />

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___1R5TS)}
                >
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    {"Real, beautiful plants \nright to your door"}
                  </h1>

                  <Button
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    className={classNames("__wab_instance", sty.button)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kM4Ia
                      )}
                    >
                      {"See all plants"}
                    </div>

                    <ButtonArrowIcon
                      className={classNames(projectcss.all, sty.svg___4Je)}
                      role={"img"}
                    />
                  </Button>
                </p.Stack>
              </div>
            </p.Stack>

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox___17LEy)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__uRT
                  )}
                >
                  {"Top Collections"}
                </h2>
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__gO0Ke)}
              >
                <div className={classNames(projectcss.all, sty.column__frPUl)}>
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__cEy0L
                    )}
                    image={
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__raacl)}
                        displayHeight={"100%" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: galinaNMiziNqvJx5MUnsplashjpgRy6JhmNyr3GQ2D,
                          fullWidth: 1920,
                          fullHeight: 1278,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    onSale={true}
                    price={"$65.00"}
                    ratings={
                      <Ratings
                        className={classNames(
                          "__wab_instance",
                          sty.ratings___9HCKh
                        )}
                        numReviews={"(45 Review)"}
                      />
                    }
                    title={"Product"}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__mtdFg)}>
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard___0SNn6
                    )}
                    image={
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__dTj96)}
                        displayHeight={"100%" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: igorSonFvPxCqgtwcUnsplashjpg4LiZhfTrxPcaR5,
                          fullWidth: 640,
                          fullHeight: 481,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    onSale={true}
                    price={"$80.00"}
                    ratings={
                      <Ratings
                        className={classNames(
                          "__wab_instance",
                          sty.ratings__qnsHm
                        )}
                        numReviews={"(45 Review)"}
                      />
                    }
                    title={"Product"}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__eX7K)}>
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__wxuR
                    )}
                    image={
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__cz3Qs)}
                        displayHeight={"100%" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: scottWebbORwRlTgBrPoUnsplashjpgISgh9OhSuSpLm,
                          fullWidth: 1920,
                          fullHeight: 1280,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    price={"$40.00"}
                    ratings={
                      <Ratings
                        className={classNames(
                          "__wab_instance",
                          sty.ratings___3Ziav
                        )}
                        numReviews={"(45 Review)"}
                      />
                    }
                    title={"Product"}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__h4Bnx)}>
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__vuTau
                    )}
                    image={
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___61PvG)}
                        displayHeight={"100%" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: freddieMarriageUcfKyTanLuUnsplashjpgK86N8YgnQh5D,
                          fullWidth: 640,
                          fullHeight: 427,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    onSale={true}
                    price={"$100.00"}
                    ratings={
                      <Ratings
                        className={classNames(
                          "__wab_instance",
                          sty.ratings__mZyg6
                        )}
                        numReviews={"(45 Review)"}
                      />
                    }
                    title={"Product"}
                  />
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <FeatureItem
                data-plasmic-name={"featureItem"}
                data-plasmic-override={overrides.featureItem}
                className={classNames("__wab_instance", sty.featureItem)}
              />
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__zjdKh)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ip4Eb
                  )}
                >
                  {"Featured Products"}
                </div>
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__ll7Ao)}
              >
                <div className={classNames(projectcss.all, sty.column___3FtVt)}>
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__uCj5
                    )}
                    price={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__b1Vig
                        )}
                      >
                        {"$160.00"}
                      </div>
                    }
                    ratings={
                      <Ratings
                        className={classNames(
                          "__wab_instance",
                          sty.ratings__uOstR
                        )}
                        numReviews={"(12 Review)"}
                        stars={"two" as const}
                      />
                    }
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0ZZxD
                        )}
                      >
                        {"Designed Sofa"}
                      </div>
                    }
                    withReviews={true}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__iLenD)}>
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard___8WzM
                    )}
                    image={
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__lvftP)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: f2I3Qd6A78HjFxH,
                          fullWidth: 270,
                          fullHeight: 310,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    price={"$200.00"}
                    ratings={
                      <Ratings
                        className={classNames(
                          "__wab_instance",
                          sty.ratings__xwCyQ
                        )}
                        stars={"four" as const}
                      />
                    }
                    title={"Dining Table"}
                    withReviews={true}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__o0KQb)}>
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__sVbOe
                    )}
                    image={
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___4An2H)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: f3CcpC9XiKq2Il5,
                          fullWidth: 270,
                          fullHeight: 310,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    price={"$100.00"}
                    ratings={
                      <Ratings
                        className={classNames(
                          "__wab_instance",
                          sty.ratings__pmaRm
                        )}
                        numReviews={"(23 Review)"}
                        stars={"five" as const}
                      />
                    }
                    title={"Chair and Table"}
                    withReviews={true}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__hozVu)}>
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__lYZls
                    )}
                    image={
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__q3UsE)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: f49QN8ZaJq29O5,
                          fullWidth: 270,
                          fullHeight: 310,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    price={"$299.00"}
                    ratings={
                      <Ratings
                        className={classNames(
                          "__wab_instance",
                          sty.ratings__wkNky
                        )}
                        numReviews={"(35 Review)"}
                      />
                    }
                    title={"Modern Arm Chair"}
                    withReviews={true}
                  />
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__qCuy5)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hq17B
                  )}
                >
                  {"Latest Blog"}
                </div>
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__yjn6)}
              >
                <div className={classNames(projectcss.all, sty.column__qvjgp)}>
                  <BlogPost
                    className={classNames(
                      "__wab_instance",
                      sty.blogPost__b2Kfe
                    )}
                    image={
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___5N7VZ)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: b182T8PEt1H6XE,
                          fullWidth: 370,
                          fullHeight: 250,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__fCaj)}>
                  <BlogPost
                    className={classNames("__wab_instance", sty.blogPost__sJSz)}
                    image={
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__igDg3)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: b2JoTaPwQqaAXfhX,
                          fullWidth: 370,
                          fullHeight: 250,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__yawgd)}>
                  <BlogPost
                    className={classNames(
                      "__wab_instance",
                      sty.blogPost__xwBeM
                    )}
                    image={
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__njwCx)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: b3K3FwJJfwvcCie,
                          fullWidth: 370,
                          fullHeight: 250,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  />
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__znOri)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__tOl3)}
                  displayHeight={"60px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"90px" as const}
                  src={{
                    src: adidasJUfqs4ASrbPyRx,
                    fullWidth: 90,
                    fullHeight: 60,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__gAe6)}
                  displayHeight={"60px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"91px" as const}
                  src={{
                    src: hmHEYwZvvf0UhGQd,
                    fullWidth: 91,
                    fullHeight: 60,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__rpo3P)}
                  displayHeight={"60px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"98px" as const}
                  src={{
                    src: kappaFzdK3Rt4HvsmOt,
                    fullWidth: 98,
                    fullHeight: 60,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___5BkxJ)}
                  displayHeight={"60px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"124px" as const}
                  src={{
                    src: lacosteR80GqbEmgzzFt4,
                    fullWidth: 124,
                    fullHeight: 60,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__cqDxx)}
                  displayHeight={"60px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"125px" as const}
                  src={{
                    src: levisLm4DniJm7Mi8Sl,
                    fullWidth: 125,
                    fullHeight: 60,
                    aspectRatio: undefined
                  }}
                />
              </p.Stack>
            ) : null}
            {true ? (
              <Footer
                className={classNames("__wab_instance", sty.footer__cWNhG)}
              />
            ) : null}
          </div>

          <p.Stack
            as={"div"}
            data-plasmic-name={"bestSellers"}
            data-plasmic-override={overrides.bestSellers}
            hasGap={true}
            className={classNames(projectcss.all, sty.bestSellers)}
          >
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__yX6Nr)}
              >
                <Icon2Icon
                  className={classNames(projectcss.all, sty.svg__pDo1U)}
                  role={"img"}
                />

                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__vBLli
                  )}
                >
                  {"Best sellers"}
                </h2>
              </p.Stack>
            ) : null}
            {true ? (
              <ProductRow
                data-plasmic-name={"productRow"}
                data-plasmic-override={overrides.productRow}
                className={classNames("__wab_instance", sty.productRow)}
              />
            ) : null}
          </p.Stack>

          <p.Stack
            as={"div"}
            data-plasmic-name={"bigPlants"}
            data-plasmic-override={overrides.bigPlants}
            hasGap={true}
            className={classNames(projectcss.all, sty.bigPlants)}
          >
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__nj6GL)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2___1J3Kf
                  )}
                >
                  {"Big plants"}
                </h2>
              </p.Stack>
            ) : null}

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__abTrr)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__oUoru)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__tNz50)}
                  displayHeight={
                    "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                  }
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"100%" as const}
                  loading={"lazy" as const}
                  src={{
                    src: plant6JpgId1ZxIvNz7Ob7K,
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lf5Id)}
                  >
                    <Icon3Icon
                      className={classNames(projectcss.all, sty.svg__vDhhD)}
                      role={"img"}
                    />
                  </div>
                ) : null}

                <div className={classNames(projectcss.all, sty.freeBox__w5XkH)}>
                  <a
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___16KEe
                    )}
                  >
                    {"Donec finibus"}
                  </a>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___65A5E
                    )}
                  >
                    {"bigplants"}
                  </div>

                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5___6KrRl
                    )}
                  >
                    {"$100.00"}
                  </h5>
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__zTJcU)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___2Qbvz)}
                  displayHeight={
                    "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                  }
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"100%" as const}
                  loading={"lazy" as const}
                  src={{
                    src: plant1JpgWg6RpzwhAc5W2,
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__jsB7S)}
                  >
                    <Icon3Icon
                      className={classNames(projectcss.all, sty.svg__ogAme)}
                      role={"img"}
                    />
                  </div>
                ) : null}

                <div
                  className={classNames(projectcss.all, sty.freeBox___5O9Xy)}
                >
                  <a
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__tO4Bp
                    )}
                  >
                    {"Nulla suscipit"}
                  </a>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oGixz
                    )}
                  >
                    {"bigplants "}
                  </div>

                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__oe1BC
                    )}
                  >
                    {"$49.40 "}
                  </h5>
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___11XxX)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___4Cy3N)}
                  displayHeight={
                    "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                  }
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"100%" as const}
                  loading={"lazy" as const}
                  src={{
                    src: plant7JpgDppxIt896Nloc,
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__d2KOv)}
                  >
                    <Icon3Icon
                      className={classNames(projectcss.all, sty.svg__eUSgM)}
                      role={"img"}
                    />
                  </div>
                ) : null}

                <div className={classNames(projectcss.all, sty.freeBox__rN9A2)}>
                  <a
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__x2D1R
                    )}
                  >
                    {"Sed consectetur"}
                  </a>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ye4A0
                    )}
                  >
                    {"bigplants "}
                  </div>

                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__hPzg0
                    )}
                  >
                    {"$18.40 "}
                  </h5>
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__pgZod)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__r4Nxn)}
                  displayHeight={
                    "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                  }
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"100%" as const}
                  loading={"lazy" as const}
                  src={{
                    src: plant5JpgFP3Q7N5QgI5GW,
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___2KE2U)}
                  >
                    <Icon3Icon
                      className={classNames(projectcss.all, sty.svg__gaVuo)}
                      role={"img"}
                    />
                  </div>
                ) : null}

                <div className={classNames(projectcss.all, sty.freeBox__dNcPn)}>
                  <a
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__vy77O
                    )}
                  >
                    {"Vestibulum eget"}
                  </a>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3Ytgd
                    )}
                  >
                    {"bigplants "}
                  </div>

                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__ckrzv
                    )}
                  >
                    {"$220.40 "}
                  </h5>
                </div>
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            data-plasmic-name={"cactuses"}
            data-plasmic-override={overrides.cactuses}
            hasGap={true}
            className={classNames(projectcss.all, sty.cactuses)}
          >
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qLpG)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2___1B0Fd
                  )}
                >
                  {"Cactuses"}
                </h2>
              </p.Stack>
            ) : null}

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__gOqx2)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__xrxon)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__pl1Ec)}
                  displayHeight={
                    "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                  }
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"100%" as const}
                  loading={"lazy" as const}
                  src={{
                    src: plant41JpgIUfKcDmduCdWr,
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__rslnS)}
                  >
                    <Icon3Icon
                      className={classNames(projectcss.all, sty.svg__o1SUn)}
                      role={"img"}
                    />
                  </div>
                ) : null}

                <div className={classNames(projectcss.all, sty.freeBox__gOD)}>
                  <a
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__t8A1K
                    )}
                  >
                    {"Cras molestie"}
                  </a>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__t1TzB
                    )}
                  >
                    {"cactuses "}
                  </div>

                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__zhZXk
                    )}
                  >
                    {"$24.99"}
                  </h5>
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___9WwgV)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__o30G1)}
                  displayHeight={
                    "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                  }
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"100%" as const}
                  loading={"lazy" as const}
                  src={{
                    src: plant31JpgKwAdn91AqX8MsA,
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nJqn)}
                  >
                    <Icon3Icon
                      className={classNames(projectcss.all, sty.svg___9NczB)}
                      role={"img"}
                    />
                  </div>
                ) : null}

                <div className={classNames(projectcss.all, sty.freeBox__txwr5)}>
                  <a
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__pU2D
                    )}
                  >
                    {"Curabitur eu tempor"}
                  </a>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__htSNi
                    )}
                  >
                    {"Cactuses"}
                  </div>

                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__dqd0
                    )}
                  >
                    {"$49.40 "}
                  </h5>
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__wScD)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__chWtt)}
                  displayHeight={
                    "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                  }
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"100%" as const}
                  loading={"lazy" as const}
                  src={{
                    src: plant9WebpVtLmMePqxjlqvw,
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__invN)}
                  >
                    <Icon3Icon
                      className={classNames(projectcss.all, sty.svg__b0XOf)}
                      role={"img"}
                    />
                  </div>
                ) : null}

                <div className={classNames(projectcss.all, sty.freeBox__eOt31)}>
                  <a
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__ovjZx
                    )}
                  >
                    {"Fusce sagittis"}
                  </a>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__metAj
                    )}
                  >
                    {"Cactuses"}
                  </div>

                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__uJwHg
                    )}
                  >
                    {"$49.40 "}
                  </h5>
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__eFoax)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__sOt3)}
                  displayHeight={
                    "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                  }
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"100%" as const}
                  loading={"lazy" as const}
                  src={{
                    src: plant2WebpFt68HYeVfundz5,
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sy8Kc)}
                  >
                    <Icon3Icon
                      className={classNames(projectcss.all, sty.svg__l5Uzv)}
                      role={"img"}
                    />
                  </div>
                ) : null}

                <div className={classNames(projectcss.all, sty.freeBox__wNjy8)}>
                  <a
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___7CCam
                    )}
                  >
                    {"Integer porta"}
                  </a>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rMzX
                    )}
                  >
                    {"Cactuses"}
                  </div>

                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__ySlA6
                    )}
                  >
                    {"$49.40 "}
                  </h5>
                </div>
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            data-plasmic-name={"testimonials"}
            data-plasmic-override={overrides.testimonials}
            hasGap={true}
            className={classNames(projectcss.all, sty.testimonials)}
          >
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___6NmLd)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__jLRg
                  )}
                >
                  {"Testimonials"}
                </h2>
              </p.Stack>
            ) : null}

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__zXxCv)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___71ZHd)}
              >
                <QuotessvgIcon
                  className={classNames(projectcss.all, sty.svg___9Fpl6)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__goZg
                  )}
                >
                  {
                    "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                  }
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__vfBl2)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5___7WoCr
                      )}
                    >
                      {"JOHN DOPE,"}
                    </h5>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__u9Cmq
                      )}
                    >
                      {" COLORADO, USA"}
                    </h5>
                  </p.Stack>
                ) : null}
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__xU2Fv)}
              >
                <QuotessvgIcon
                  className={classNames(projectcss.all, sty.svg__mzxK1)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nyadF
                  )}
                >
                  {
                    "Well I'll be d*mned. These plants really ARE greener than any of my recruits."
                  }
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___8NmmK)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__cckn9
                      )}
                    >
                      {"MAJOR PAYNE"}
                    </h5>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__yvVgM
                      )}
                    >
                      {", VA, USA"}
                    </h5>
                  </p.Stack>
                ) : null}
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <Footer
            className={classNames("__wab_instance", sty.footer___0Et4Q)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "h1",
    "button",
    "featureItem",
    "bestSellers",
    "productRow",
    "bigPlants",
    "cactuses",
    "testimonials"
  ],
  h1: ["h1"],
  button: ["button"],
  featureItem: ["featureItem"],
  bestSellers: ["bestSellers", "productRow"],
  productRow: ["productRow"],
  bigPlants: ["bigPlants"],
  cactuses: ["cactuses"],
  testimonials: ["testimonials"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  h1: "h1";
  button: typeof Button;
  featureItem: typeof FeatureItem;
  bestSellers: "div";
  productRow: typeof ProductRow;
  bigPlants: "div";
  cactuses: "div";
  testimonials: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHome__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHome__VariantsArgs;
    args?: PlasmicHome__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHome__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHome__ArgProps,
          internalVariantPropNames: PlasmicHome__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h1: makeNodeComponent("h1"),
    button: makeNodeComponent("button"),
    featureItem: makeNodeComponent("featureItem"),
    bestSellers: makeNodeComponent("bestSellers"),
    productRow: makeNodeComponent("productRow"),
    bigPlants: makeNodeComponent("bigPlants"),
    cactuses: makeNodeComponent("cactuses"),
    testimonials: makeNodeComponent("testimonials"),

    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
