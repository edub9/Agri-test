// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qypGRFiT5EqbMS3JE3NhBQ
// Component: rrSvMWQ7qS_-6y
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header2 from "../../Header2"; // plasmic-import: UJx9-S0rynFQ8M/component
import ProductCard from "../../ProductCard"; // plasmic-import: Wy4F2uM1mM72A2/component
import Ratings from "../../Ratings"; // plasmic-import: LRkC9OCLRYTXtV/component
import FeatureItem from "../../FeatureItem"; // plasmic-import: ZMyZ0SSZNWXsw4/component
import BlogPost from "../../BlogPost"; // plasmic-import: Fr41oLroF9RKnQ/component
import Footer from "../../Footer"; // plasmic-import: 3o_cRhYGL2jyH/component
import MenuButton from "../../MenuButton"; // plasmic-import: B6DM_ThZsY13JO/component

import { useScreenVariants as useScreenVariantsgOmXfJvEYn5Htg } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: GOmXfJvEYn5HTG/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_planty.module.css"; // plasmic-import: qypGRFiT5EqbMS3JE3NhBQ/projectcss
import sty from "./PlasmicFaq.module.css"; // plasmic-import: rrSvMWQ7qS_-6y/css

import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: Yzi7tYpO3fZfz_/icon
import DotSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__DotSvgrepoCom1Svg"; // plasmic-import: 7uJTb9WvuPc1Ig/icon
import LocationSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__LocationSvgrepoCom1Svg"; // plasmic-import: CQdrFD_ATSxEU4/icon
import LogoWhitesvgIcon from "./icons/PlasmicIcon__LogoWhitesvg"; // plasmic-import: qG16EiYJgqIGUV/icon
import galinaNMiziNqvJx5MUnsplashjpgRy6JhmNyr3GQ2D from "./images/galinaNMiziNqvJx5MUnsplashjpg.jpeg"; // plasmic-import: ry6jhmNYR3gQ2d/picture
import igorSonFvPxCqgtwcUnsplashjpg4LiZhfTrxPcaR5 from "./images/igorSonFvPxCqgtwcUnsplashjpg.jpeg"; // plasmic-import: 4LiZhfTRXPcaR5/picture
import scottWebbORwRlTgBrPoUnsplashjpgISgh9OhSuSpLm from "./images/scottWebbORwRlTgBrPoUnsplashjpg.jpeg"; // plasmic-import: i_Sgh9ohSuSPLm/picture
import freddieMarriageUcfKyTanLuUnsplashjpgK86N8YgnQh5D from "./images/freddieMarriageUcfKyTanLuUnsplashjpg.jpeg"; // plasmic-import: k-86N8YgnQH5D-/picture
import f1YOJqCo6TU0Pn from "./images/f1.jpeg"; // plasmic-import: yO-JQCo6tU0-PN/picture
import f2I3Qd6A78HjFxH from "./images/f2.jpeg"; // plasmic-import: I3Qd6A7_8HjFxH/picture
import f3CcpC9XiKq2Il5 from "./images/f3.jpeg"; // plasmic-import: CcpC9xiKQ_2Il5/picture
import f49QN8ZaJq29O5 from "./images/f4.jpeg"; // plasmic-import: 9qN_8_zaJq29O5/picture
import b182T8PEt1H6XE from "./images/b1.jpeg"; // plasmic-import: 82T8pET1-H6xE-/picture
import b2JoTaPwQqaAXfhX from "./images/b2.jpeg"; // plasmic-import: JoTAPwQqaAXfhX/picture
import b3K3FwJJfwvcCie from "./images/b3.jpeg"; // plasmic-import: k3fw_JJfwvcCIE/picture
import adidasJUfqs4ASrbPyRx from "./images/adidas.png"; // plasmic-import: jUfqs4ASrbPyRX/picture
import hmHEYwZvvf0UhGQd from "./images/hm.png"; // plasmic-import: hEYwZvvf0uhGQd/picture
import kappaFzdK3Rt4HvsmOt from "./images/kappa.png"; // plasmic-import: fzdK3Rt4HvsmOt/picture
import lacosteR80GqbEmgzzFt4 from "./images/lacoste.png"; // plasmic-import: r80GqbEMGZZFt4/picture
import levisLm4DniJm7Mi8Sl from "./images/levis.png"; // plasmic-import: Lm4DniJM7MI8Sl/picture
import plant6JpgId1ZxIvNz7Ob7K from "./images/plant6Jpg.png"; // plasmic-import: ID1zxIvNZ7Ob7K/picture
import plant1JpgWg6RpzwhAc5W2 from "./images/plant1Jpg.png"; // plasmic-import: wg6RPZWHAc5W2-/picture
import plant7JpgDppxIt896Nloc from "./images/plant7Jpg.png"; // plasmic-import: DPPXIt8_96NLOC/picture
import plant5JpgFP3Q7N5QgI5GW from "./images/plant5Jpg.png"; // plasmic-import: fP3Q7n5-qgI5gW/picture
import plant41JpgIUfKcDmduCdWr from "./images/plant41Jpg.png"; // plasmic-import: IUfKcDmdu-cdWr/picture
import plant31JpgKwAdn91AqX8MsA from "./images/plant31Jpg.png"; // plasmic-import: KwAdn91aqX8MsA/picture
import plant9WebpVtLmMePqxjlqvw from "./images/plant9Webp.webp"; // plasmic-import: VTLmMePQXJLQVW/picture
import plant2WebpFt68HYeVfundz5 from "./images/plant2Webp.webp"; // plasmic-import: FT68hYEVfundz5/picture
import promowebpXJMjiB5Kd1MqgC from "./images/promowebp.webp"; // plasmic-import: xJMjiB5kd1mqgC/picture

export type PlasmicFaq__VariantMembers = {};
export type PlasmicFaq__VariantsArgs = {};
type VariantPropType = keyof PlasmicFaq__VariantsArgs;
export const PlasmicFaq__VariantProps = new Array<VariantPropType>();

export type PlasmicFaq__ArgsType = {};
type ArgPropType = keyof PlasmicFaq__ArgsType;
export const PlasmicFaq__ArgProps = new Array<ArgPropType>();

export type PlasmicFaq__OverridesType = {
  root?: p.Flex<"div">;
  foreground2?: p.Flex<"div">;
  header?: p.Flex<"div">;
  featureItem?: p.Flex<typeof FeatureItem>;
  bigPlants?: p.Flex<"div">;
  cactuses?: p.Flex<"div">;
  menuButton?: p.Flex<typeof MenuButton>;
};

export interface DefaultFaqProps {
  className?: string;
}

function PlasmicFaq__RenderFunc(props: {
  variants: PlasmicFaq__VariantsArgs;
  args: PlasmicFaq__ArgsType;
  overrides: PlasmicFaq__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsgOmXfJvEYn5Htg()
  });

  return (
    <React.Fragment>
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__keOrB)}>
              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <Header2
                  className={classNames("__wab_instance", sty.header2___0Ygr7)}
                />
              ) : null}

              <div className={classNames(projectcss.all, sty.freeBox__weuac)}>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground2"}
                  data-plasmic-override={overrides.foreground2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground2)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__xEYzy)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1___6OyyK
                      )}
                    >
                      {"Behold our FAQ"}
                    </h1>

                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__z4Lc3
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qitoa
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                            : "All right, friends. Letâ€™s do this. This section will cover basic, frequently asked questions for e-commerce merchants."}
                        </div>
                      </div>
                    ) : null}
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames(projectcss.all, sty.header)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__lbGV)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__wvpFe)}>
                  {true ? (
                    <Header2
                      className={classNames(
                        "__wab_instance",
                        sty.header2__a14Dr
                      )}
                    />
                  ) : null}
                </div>
              </p.Stack>

              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__gSdS)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__r9Y0W
                    )}
                  >
                    {"Top Collections"}
                  </h2>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__yEXcM)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__qXGjz)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard___5VduZ
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___2EV7T)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: galinaNMiziNqvJx5MUnsplashjpgRy6JhmNyr3GQ2D,
                            fullWidth: 1920,
                            fullHeight: 1278,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$65.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__lvj9Y
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___4ZdkM)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard___0DDzA
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__kuQir)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: igorSonFvPxCqgtwcUnsplashjpg4LiZhfTrxPcaR5,
                            fullWidth: 640,
                            fullHeight: 481,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$80.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__zvXcm
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__nKz0H)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__tyiPd
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__pYDf)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: scottWebbORwRlTgBrPoUnsplashjpgISgh9OhSuSpLm,
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$40.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__gnqom
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>

                  <div className={classNames(projectcss.all, sty.column__yFEj)}>
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__sfb8R
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___6LQAi)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: freddieMarriageUcfKyTanLuUnsplashjpgK86N8YgnQh5D,
                            fullWidth: 640,
                            fullHeight: 427,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$100.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__cRm
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <FeatureItem
                  data-plasmic-name={"featureItem"}
                  data-plasmic-override={overrides.featureItem}
                  className={classNames("__wab_instance", sty.featureItem)}
                />
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__qAJ)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uZYwY
                    )}
                  >
                    {"Featured Products"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__hLLt4)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__jlMDa)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__hYb1D
                      )}
                      price={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cuM1I
                          )}
                        >
                          {"$160.00"}
                        </div>
                      }
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__gw602
                          )}
                          numReviews={"(12 Review)"}
                          stars={"two" as const}
                        />
                      }
                      title={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rpwk4
                          )}
                        >
                          {"Designed Sofa"}
                        </div>
                      }
                      withReviews={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__teLyq)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__zoF8H
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__c1Slq)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: f2I3Qd6A78HjFxH,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$200.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings___87P1
                          )}
                          stars={"four" as const}
                        />
                      }
                      title={"Dining Table"}
                      withReviews={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__vRkh3)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__a0PXf
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__hyct)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: f3CcpC9XiKq2Il5,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$100.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings___7Tqm3
                          )}
                          numReviews={"(23 Review)"}
                          stars={"five" as const}
                        />
                      }
                      title={"Chair and Table"}
                      withReviews={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___9L0M)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__jsp7G
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__xzPv)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: f49QN8ZaJq29O5,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$299.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__wNao9
                          )}
                          numReviews={"(35 Review)"}
                        />
                      }
                      title={"Modern Arm Chair"}
                      withReviews={true}
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__qngUu)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__i7MRs
                    )}
                  >
                    {"Latest Blog"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns___5Jd3)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__uKmYg)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__e6YU
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__czHLw)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: b182T8PEt1H6XE,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>

                  <div className={classNames(projectcss.all, sty.column__e8Ao)}>
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__uyYbz
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__qrWyL)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: b2JoTaPwQqaAXfhX,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__ftPzQ)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__tkgnC
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___3OYA)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: b3K3FwJJfwvcCie,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ffWDu)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__fn48Q)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"90px" as const}
                    src={{
                      src: adidasJUfqs4ASrbPyRx,
                      fullWidth: 90,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__uO1C)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"91px" as const}
                    src={{
                      src: hmHEYwZvvf0UhGQd,
                      fullWidth: 91,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___7O0Q)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"98px" as const}
                    src={{
                      src: kappaFzdK3Rt4HvsmOt,
                      fullWidth: 98,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ctkb)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"124px" as const}
                    src={{
                      src: lacosteR80GqbEmgzzFt4,
                      fullWidth: 124,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__biuBs)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"125px" as const}
                    src={{
                      src: levisLm4DniJm7Mi8Sl,
                      fullWidth: 125,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />
                </p.Stack>
              ) : null}
              {true ? (
                <Footer
                  className={classNames("__wab_instance", sty.footer__ub68C)}
                />
              ) : null}
            </div>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"bigPlants"}
              data-plasmic-override={overrides.bigPlants}
              hasGap={true}
              className={classNames(projectcss.all, sty.bigPlants)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__u4U0)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__rmylc
                    )}
                  >
                    {"Big plants"}
                  </h2>
                </p.Stack>
              ) : null}

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__qIxdw)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__eOk3J)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__f6JzW)}
                    displayHeight={
                      "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant6JpgId1ZxIvNz7Ob7K,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__pUwkX)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__snbOi)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__zagBi)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___8PjK9
                      )}
                    >
                      {"Donec finibus"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___52Og4
                      )}
                    >
                      {"bigplants"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__pbPrq
                      )}
                    >
                      {"$100.00"}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___3F8YM)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__uvdm7)}
                    displayHeight={
                      "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant1JpgWg6RpzwhAc5W2,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__yoWr)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__hduKh)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__woUT)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__u4Uf5
                      )}
                    >
                      {"Nulla suscipit"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mn5BB
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5___4HgNy
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__t693J)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__o8Nqh)}
                    displayHeight={
                      "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant7JpgDppxIt896Nloc,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mlHpm)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__qm6Uo)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__m5VUb)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__tktmn
                      )}
                    >
                      {"Sed consectetur"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bZeQb
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__ajliy
                      )}
                    >
                      {"$18.40 "}
                    </h5>
                  </div>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__nTQsJ)}
                    displayHeight={
                      "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant5JpgFP3Q7N5QgI5GW,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__dfaB0)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__wHvhf)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__s7Uyc)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__se0My
                      )}
                    >
                      {"Vestibulum eget"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5RvXy
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__uh2Ts
                      )}
                    >
                      {"$220.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"cactuses"}
              data-plasmic-override={overrides.cactuses}
              hasGap={true}
              className={classNames(projectcss.all, sty.cactuses)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__yR67)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__noXZq
                    )}
                  >
                    {"Cactuses"}
                  </h2>
                </p.Stack>
              ) : null}

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__rs7L)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__crIfR)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__jcFwt)}
                    displayHeight={
                      "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant41JpgIUfKcDmduCdWr,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__xtXx)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__sbdo5)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox___10FfY)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___49G1W
                      )}
                    >
                      {"Cras molestie"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qvJow
                      )}
                    >
                      {"cactuses "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__lIaRv
                      )}
                    >
                      {"$24.99"}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__npHm)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__kk3E9)}
                    displayHeight={
                      "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant31JpgKwAdn91AqX8MsA,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__kKfJh)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__m5HWk)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__k0Hv4)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__j5X2G
                      )}
                    >
                      {"Curabitur eu tempor"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__t9CSo
                      )}
                    >
                      {"Cactuses"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__hsVkj
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__m1Ax0)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__xIpSr)}
                    displayHeight={
                      "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant9WebpVtLmMePqxjlqvw,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__pcRo6)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg___3XgIk)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox___7Dx57)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__gptcR
                      )}
                    >
                      {"Fusce sagittis"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mpMU
                      )}
                    >
                      {"Fusce sagittis"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__qjAjd
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___2KAyH)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__io5N2)}
                    displayHeight={
                      "270px /* plasmic-token: Wa3sKj20wwXUep */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant2WebpFt68HYeVfundz5,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___0FUg0
                      )}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__brF5)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__lR9So)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___1VzC
                      )}
                    >
                      {"Integer porta"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eydmP
                      )}
                    >
                      {"Cactuses"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__whIuR
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox___5Xp01)}>
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__m705X)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__pqfe5
                    )}
                  >
                    {"How long does shipping take?"}
                  </h4>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qYrDp
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "Now thatâ€™s a frequent one all right, ainâ€™t it? Your answer to this should manage customer expectations. Just like a good checkout flow should. Tell them the truth"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ldcZ5)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__pkO29
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__o1JSl
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__d8Ao1
                            )}
                          >
                            {
                              "US shipping will take between 3 to 5 business days."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__faIO
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__mgHw2
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___2NGx
                            )}
                          >
                            {
                              "International shipping will take between 5 and 10 business days."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___2KPU
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__l6Hq1
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dIcyT
                            )}
                          >
                            {
                              "Mars shipping will be automatically redirected to Elon Muskâ€™s Twitter account."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___4DPor)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__yiVip
                    )}
                  >
                    {"How do refunds and returns work?"}
                  </h4>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vr7Y
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "It happens. Even the most beautiful of plants will disappoint someone. Again, tell it like it is:"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__mVbL)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__c3JOx
                          )}
                        >
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___1OH4H
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__al0Ni
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__iGyzd
                                )}
                              >
                                {"All discounted items sales are final."}
                              </div>
                            </p.Stack>
                          ) : null}
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__vDaxL
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__kplLt
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__hotuh
                                )}
                              >
                                {
                                  "If youâ€™d like another version of your item, please use the return label. Instructions are printed on its back."
                                }
                              </div>
                            </p.Stack>
                          ) : null}
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__gRfC5
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__jMvJp
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___9SLXr
                                )}
                              >
                                {
                                  "If your item is damaged or not functioning correctly, email us at info@planty.com, and weâ€™ll refund you + send you a new one ASAP!"
                                }
                              </div>
                            </p.Stack>
                          ) : null}
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kdwz)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__pdgi3
                    )}
                  >
                    {"Rapid-fire questions"}
                  </h4>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pdaCr
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "GDPR, am I right? Make sure youâ€™re as transparent as possible with your data handling process. Or, if youâ€™re using Snipcart, just refer to our ToS and DPA"}
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__nEg9M)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__tCUgt
                    )}
                  >
                    {"How do you handle sensitive customer information?"}
                  </h4>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__roImy
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "GDPR, am I right? Make sure youâ€™re as transparent as possible with your data handling process. Or, if youâ€™re using Snipcart, just refer to our ToS and DPA"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__iyUcr)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__nS6U9
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9ZVmW
                            )}
                          >
                            {"Q: Why is this Planty theme so beautiful?"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__thjQx
                            )}
                          >
                            {
                              "A: We hired our first designer a couple of months ago."
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oAxCn
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__k9P5P
                            )}
                          >
                            {"Q: Why did you build a theme for Stackbit?"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jaGAb
                            )}
                          >
                            {
                              "A: We believe in Stackbitâ€™s promise of opening up the JAMstack to more developers. Plus, we trust these folks.\n Read more about Stackbit"
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cWis1
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___2W894
                            )}
                          >
                            {"Q: How many people work at Snipcart? "}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__h3WfA
                            )}
                          >
                            {
                              "A: Not a lot! Weâ€™re a small, bootstrapped team of eight human beings. Michael might be a robot, though. "
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jBEju
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vlCo6
                            )}
                          >
                            {"Q: Why is Snipcart based in QuÃ©bec City?"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gMpBo
                            )}
                          >
                            {"A: Have you been here? Itâ€™s beaaautiful!"}
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__s3IfE
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___6Sqv1
                            )}
                          >
                            {"Q: Whatâ€™s the meaning of life? "}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cx7Nq
                            )}
                          >
                            {
                              "A: Weâ€™re not quite sure. But building useful products with people we love feels meaningful enough."
                            }
                          </div>
                        </div>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
            </div>
          ) : null}
          {true ? (
            <Footer
              className={classNames("__wab_instance", sty.footer___7X2K)}
            />
          ) : null}

          <div className={classNames(projectcss.all, sty.freeBox__oilFy)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__nen6)}>
                <div
                  className={classNames(projectcss.all, sty.columns___6XmPo)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__d5NM2)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__lb4L)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("562px" as const)
                          : ("562px" as const)
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("100%" as const)
                          : ("100%" as const)
                      }
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("947px" as const)
                          : ("947px" as const)
                      }
                      loading={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("lazy" as const)
                          : ("lazy" as const)
                      }
                      src={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? {
                              src: promowebpXJMjiB5Kd1MqgC,
                              fullWidth: 720,
                              fullHeight: 525,
                              aspectRatio: undefined
                            }
                          : {
                              src: promowebpXJMjiB5Kd1MqgC,
                              fullWidth: 720,
                              fullHeight: 525,
                              aspectRatio: undefined
                            }
                      }
                    />
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__qCavq)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__ijFmh
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Behold our FAQ"
                        : "Still have questions?\nContact us. "}
                    </h1>

                    <div
                      className={classNames(projectcss.all, sty.columns__rhEeA)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.column__pKND)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oa3Q
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "226 rue St-Joseph E, \nQuÃ©bec, QC, Canada, \nG1K 3A9"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__owdaL
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "+1-202-555-0112"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.column___1RKyo
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__c5JRc
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "geeks@snipcart.com"}
                        </div>

                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__uuvZz
                            )}
                          >
                            {(
                              hasVariant(globalVariants, "screen", "mobile")
                                ? true
                                : true
                            ) ? (
                              <p.Stack
                                as={"a"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.a,
                                  sty.link__rPTyA
                                )}
                              >
                                <LocationSvgrepoCom1SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__dAcl
                                  )}
                                  role={"img"}
                                />

                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__k0C8E
                                  )}
                                >
                                  {hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobile"
                                  )
                                    ? "Discover"
                                    : "On the map"}
                                </div>
                              </p.Stack>
                            ) : null}
                          </div>
                        ) : null}
                      </p.Stack>
                    </div>
                  </p.Stack>
                </div>
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__jYztq)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qxDZm)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__gnt7K)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___3UWY
                        )}
                      >
                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <MenuButton
                            data-plasmic-name={"menuButton"}
                            data-plasmic-override={overrides.menuButton}
                            className={classNames(
                              "__wab_instance",
                              sty.menuButton
                            )}
                          />
                        ) : null}
                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__w14Mu
                            )}
                          >
                            <p.PlasmicIcon
                              PlasmicIconType={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? LogoWhitesvgIcon
                                  : LogoWhitesvgIcon
                              }
                              className={classNames(
                                projectcss.all,
                                sty.svg__jyE43
                              )}
                              role={"img"}
                            />

                            <a
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__x9Ut
                              )}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? ("#" as const)
                                  : `/store`
                              }
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "Store"
                                : "Store"}
                            </a>

                            <a
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__iCb48
                              )}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? ("#" as const)
                                  : `/about`
                              }
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "About"
                                : "About"}
                            </a>

                            <a
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link___3CA12
                              )}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? ("#" as const)
                                  : `/faq`
                              }
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "Faq"
                                : "Faq"}
                            </a>
                          </p.Stack>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vmHov
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uKrc1
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "Â© Company. All rights reserved. This site proudly built with "
                              : "Â© Company. All rights reserved. This site proudly built with "}
                          </div>

                          <a
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__kwsde
                            )}
                            href={
                              hasVariant(globalVariants, "screen", "mobile")
                                ? ("https://www.plasmic.app/" as const)
                                : ("https://www.plasmic.app/" as const)
                            }
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "Plasmic"
                              : "Plasmic"}
                          </a>
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>
                ) : null}
              </div>
            ) : null}
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "foreground2",
    "header",
    "featureItem",
    "bigPlants",
    "cactuses",
    "menuButton"
  ],
  foreground2: ["foreground2"],
  header: ["header", "featureItem"],
  featureItem: ["featureItem"],
  bigPlants: ["bigPlants"],
  cactuses: ["cactuses"],
  menuButton: ["menuButton"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  foreground2: "div";
  header: "div";
  featureItem: typeof FeatureItem;
  bigPlants: "div";
  cactuses: "div";
  menuButton: typeof MenuButton;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFaq__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFaq__VariantsArgs;
    args?: PlasmicFaq__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicFaq__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicFaq__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicFaq__ArgProps,
          internalVariantPropNames: PlasmicFaq__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicFaq__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFaq";
  } else {
    func.displayName = `PlasmicFaq.${nodeName}`;
  }
  return func;
}

export const PlasmicFaq = Object.assign(
  // Top-level PlasmicFaq renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    foreground2: makeNodeComponent("foreground2"),
    header: makeNodeComponent("header"),
    featureItem: makeNodeComponent("featureItem"),
    bigPlants: makeNodeComponent("bigPlants"),
    cactuses: makeNodeComponent("cactuses"),
    menuButton: makeNodeComponent("menuButton"),

    // Metadata about props expected for PlasmicFaq
    internalVariantProps: PlasmicFaq__VariantProps,
    internalArgProps: PlasmicFaq__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicFaq;
/* prettier-ignore-end */
